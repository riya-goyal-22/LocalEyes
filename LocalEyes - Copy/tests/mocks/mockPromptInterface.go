// Code generated by MockGen. DO NOT EDIT.
// Source: internal/interfaces/promptInterface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPromptInterface is a mock of PromptInterface interface.
type MockPromptInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPromptInterfaceMockRecorder
}

// MockPromptInterfaceMockRecorder is the mock recorder for MockPromptInterface.
type MockPromptInterfaceMockRecorder struct {
	mock *MockPromptInterface
}

// NewMockPromptInterface creates a new mock instance.
func NewMockPromptInterface(ctrl *gomock.Controller) *MockPromptInterface {
	mock := &MockPromptInterface{ctrl: ctrl}
	mock.recorder = &MockPromptInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPromptInterface) EXPECT() *MockPromptInterfaceMockRecorder {
	return m.recorder
}

// Run mocks base method.
func (m *MockPromptInterface) Run() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Run")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run.
func (mr *MockPromptInterfaceMockRecorder) Run() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockPromptInterface)(nil).Run))
}
